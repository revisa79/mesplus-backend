# Docker-compose file for MESPLUS backend with VITE-REACT frontend in static folder.
# Includes MySQL database.

services:
  my-app:
    build: .
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/mydatabase
      ## Environment variable use for CORS 
      VITE_APP_HELLO_URL: http://35.206.223.102:8080
      ## THESE ARE VARIABLES FOR FRONTEND AND WERE INJECTED TO THE BUILD DURING NPM RUN BUILD
      #VITE_LOGIN_BACKEND_URL: http://35.206.223.102:8080
      #VITE_CHAT_BACKEND_URL: http://35.206.223.102:8080 
      #VITE_WS_BACKEND_URL: ws://localhost:8080 

  mysql:
    image: mysql:8.4.2  # Use the latest MySQL image
    container_name: mesplus-mysql-compose  # Optional container name
   #restart: always  # Restart the container if it stops
    ports:
      - "3306:3306"  # Map host port 3306 to container port 3306
    environment:
      MYSQL_ROOT_PASSWORD: pass  # Set the root password
      MYSQL_DATABASE: mydatabase  # Create a database named "my_database"
    volumes:
      - mysql-data:/var/lib/mysql  # Create a volume to persist data. This directory is in the container but mapped to certain folder of host. 
      - ./volumes/backup.sql:/docker-entrypoint-initdb.d/backup.sql
      - ./volumes/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "--silent"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s  

  rabbitmq:
    image: rabbitmq:3.12-management  # Includes the web UI for monitoring
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"  # RabbitMQ main service port
      - "15672:15672" # Management UI port
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
      RABBITMQ_NODENAME: rabbit@rabbitmq  # Important! Encountered messages don't persist every restart
    volumes:
      - ./rabbitmq_data:/var/lib/rabbitmq #This will store the data inside your current project directory (./rabbitmq_data).
volumes:
  mysql-data:                             # Define the volume
    driver: local                         # The driver: local, you're instructing Docker to create a volume that persists data locally on the host machine. 
                                          # This means the data stored in this volume will persist even if the container is removed or restarted, 
                                          # as long as the volume itself is not deleted.
                                          # This directory is usually located in /var/lib/docker/volumes/ on Linux, 
                                          # but the exact location can vary depending on your Docker setup and operating system.
  rabbitmq_data:
    name: mesplus-backend_rabbitmq_data   # Set a fixed volume name
    driver: local
